{"ast":null,"code":"import \"antd-mobile/es/button/style\";\nimport _Button from \"antd-mobile/es/button\";\nimport \"antd-mobile/es/textarea-item/style\";\nimport _TextareaItem from \"antd-mobile/es/textarea-item\";\nimport \"antd-mobile/es/input-item/style\";\nimport _InputItem from \"antd-mobile/es/input-item\";\nimport \"antd-mobile/es/nav-bar/style\";\nimport _NavBar from \"antd-mobile/es/nav-bar\";\nvar _jsxFileName = \"/Users/luofei/recruit_react_app/recruit_react_app/src/containers/laoban-info/laoban-info.jsx\";\n// 老板信息完善的路由容器组件\n//要发送请求，必然会引发一个异步action\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport HeaderSelector from \"../../components/header-selector/header-selector\";\nimport { updateUser } from \"../../redux/actions\";\n\nclass LaobanInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      header: '',\n      post: '',\n      info: '',\n      company: '',\n      salary: ''\n    };\n\n    this.handleChange = (name, value) => {\n      this.setState({\n        [name]: value //注意：要获取的不是name，而是name的值，所以用中括号\n\n      });\n    };\n\n    this.save = () => {\n      this.props.updateUser(this.state);\n    };\n\n    this.setHeader = header => {\n      this.setState({\n        header\n      });\n    };\n  }\n\n  render() {\n    //如果信息已经完善，自动重定向到对应的主界面\n    const _this$props$user = this.props.user,\n          header = _this$props$user.header,\n          type = _this$props$user.type;\n\n    if (header) {\n      //说明信息已经完善\n      const path = type === \"dashen\" ? \"/dashen\" : \"/laoban\";\n      return React.createElement(Redirect, {\n        to: path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    } //如果不满足上述条件，则执行下面的return\n\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(_NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"\\u8001\\u677F\\u4FE1\\u606F\\u5B8C\\u5584\"), React.createElement(HeaderSelector, {\n      setHeader: this.setHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(_InputItem, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u62DB\\u8058\\u804C\\u4F4D\\uFF1A\",\n      onChange: val => {\n        this.handleChange(\"post\", val);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"\\u62DB\\u8058\\u804C\\u4F4D\\uFF1A\"), React.createElement(_InputItem, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u516C\\u53F8\\u540D\\u79F0\\uFF1A\",\n      onChange: val => {\n        this.handleChange(\"company\", val);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"\\u516C\\u53F8\\u540D\\u79F0\\uFF1A\"), React.createElement(_InputItem, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u804C\\u4F4D\\u85AA\\u8D44\\uFF1A\",\n      onChange: val => {\n        this.handleChange(\"salary\", val);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"\\u804C\\u4F4D\\u85AA\\u8D44\\uFF1A\"), React.createElement(_TextareaItem, {\n      title: \"\\u804C\\u4F4D\\u8981\\u6C42\\uFF1A\",\n      rows: 3,\n      onChange: val => {\n        this.handleChange(\"info\", val);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.save,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"\\u4FDD\\u5B58\"));\n  }\n\n} //最后将它包装成容器组件\n\n\nexport default connect(state => ({\n  user: state.user\n}), {\n  updateUser //放置action\n\n})(LaobanInfo);","map":{"version":3,"sources":["/Users/luofei/recruit_react_app/recruit_react_app/src/containers/laoban-info/laoban-info.jsx"],"names":["React","Component","connect","Redirect","HeaderSelector","updateUser","LaobanInfo","state","header","post","info","company","salary","handleChange","name","value","setState","save","props","setHeader","render","user","type","path","val"],"mappings":"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","sourcesContent":["// 老板信息完善的路由容器组件\n//要发送请求，必然会引发一个异步action\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { \n\tNavBar, \n\tInputItem, \n\tTextareaItem,\n\tButton } from \"antd-mobile\";\nimport HeaderSelector from \"../../components/header-selector/header-selector\"\nimport { updateUser } from \"../../redux/actions\";\n\nclass LaobanInfo extends Component{\n\tstate = {\n\t\theader: '',\n\t\tpost: '',\n\t\tinfo: '',\n\t\tcompany: '',\n\t\tsalary: ''\n\t}\n\thandleChange = (name, value)=>{\n\t\tthis.setState({\n\t\t\t[name]: value //注意：要获取的不是name，而是name的值，所以用中括号\n\t\t})\n\t}\n\n\tsave = ()=>{\n\t\tthis.props.updateUser(this.state);\n\t}\n\n\tsetHeader = (header) => {\n\t\tthis.setState({\n\t\t\theader\n\t\t})\n\t}\n\n\trender(){\n\t\t//如果信息已经完善，自动重定向到对应的主界面\n\t\tconst { header, type} = this.props.user;\n\t\tif (header) {//说明信息已经完善\n\t\t\tconst path = type === \"dashen\" ? \"/dashen\" : \"/laoban\";\n\t\t\treturn <Redirect to={path}/>\n\t\t}\n\t\t//如果不满足上述条件，则执行下面的return\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<NavBar>老板信息完善</NavBar>\n\t\t\t\t<HeaderSelector setHeader={this.setHeader}/>\n\t\t\t\t<InputItem placeholder=\"请输入招聘职位：\" onChange={val => {this.handleChange(\"post\",val)}}>招聘职位：</InputItem>\n\t\t\t\t<InputItem placeholder=\"请输入公司名称：\" onChange={val => {this.handleChange(\"company\",val)}}>公司名称：</InputItem>\n\t\t\t\t<InputItem placeholder=\"请输入职位薪资：\" onChange={val => {this.handleChange(\"salary\",val)}}>职位薪资：</InputItem>\n\t\t\t\t<TextareaItem title=\"职位要求：\" rows={3} onChange={val => {this.handleChange(\"info\",val)}} />\n\t\t\t\t<Button type=\"primary\" onClick={this.save}>保存</Button>\n\t\t\t</div>\n\t\t)\n\t}\n}\n//最后将它包装成容器组件\nexport default connect(\n\tstate => ({user: state.user}),\n\t{ updateUser } //放置action\n\t)( LaobanInfo );\n\n"]},"metadata":{},"sourceType":"module"}