{"ast":null,"code":"import \"antd-mobile/es/wing-blank/style\";\nimport _WingBlank from \"antd-mobile/es/wing-blank\";\nimport \"antd-mobile/es/list/style\";\nimport _List from \"antd-mobile/es/list\";\nimport \"antd-mobile/es/button/style\";\nimport _Button from \"antd-mobile/es/button\";\nimport \"antd-mobile/es/input-item/style\";\nimport _InputItem from \"antd-mobile/es/input-item\";\nimport \"antd-mobile/es/white-space/style\";\nimport _WhiteSpace from \"antd-mobile/es/white-space\";\nimport \"antd-mobile/es/nav-bar/style\";\nimport _NavBar from \"antd-mobile/es/nav-bar\";\nvar _jsxFileName = \"/Users/luofei/recruit_react_app/recruit_react_app/src/containers/login/login.jsx\";\n// 登陆路由组件\nimport React, { Component } from \"react\";\nimport Logo from \"../../components/logo/logo\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/actions\";\nimport { Redirect } from \"react-router-dom\"; //渲染Redirect标签可实现自动重定向\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      //用户名\n      password: \"\" //密码\n\n    };\n\n    this.login = () => {\n      this.props.login(this.state);\n    };\n\n    this.handleChange = (name, val) => {\n      this.setState({\n        [name]: val //属性名不是name，而是name的值。用中括号装起来，它就是一个变量，否则是一个字符串。\n\n      });\n    };\n\n    this.toRegister = () => {\n      this.props.history.replace('/register');\n    };\n  }\n\n  render() {\n    const _this$props$user = this.props.user,\n          msg = _this$props$user.msg,\n          redirectTo = _this$props$user.redirectTo;\n\n    if (redirectTo) {\n      return React.createElement(Redirect, {\n        to: redirectTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(_NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"\\u590F\\xA0\\u672B\"), React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), msg ? React.createElement(\"div\", {\n      className: \"error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, msg) : null, React.createElement(_WingBlank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(_WhiteSpace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(_List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(_InputItem, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n      onChange: val => {\n        this.handleChange(\"username\", val);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"\\u7528\\u6237\\u540D\\uFF1A\"), React.createElement(_InputItem, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n      type: \"password\",\n      onChange: val => {\n        this.handleChange(\"password\", val);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"\\u5BC6\\xA0\\xA0\\xA0\\u7801\\uFF1A\"), React.createElement(_WhiteSpace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      onClick: this.login,\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"\\u767B\\u9646\"), React.createElement(_Button, {\n      onClick: this.toRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"\\u8FD8\\u6CA1\\u6709\\u8D26\\u6237\"))));\n  }\n\n}\n\nexport default connect( //包装容器组件，传入注册函数register\nstate => ({\n  user: state.user\n}), //{}里指定要传的数据。组件读取状态值，当注册成功时成功跳转；失败时在注册列表上方出现提示信息。\n{\n  login //向UI组件Register传递了一个register函数\n\n})(Login);","map":{"version":3,"sources":["/Users/luofei/recruit_react_app/recruit_react_app/src/containers/login/login.jsx"],"names":["React","Component","Logo","connect","login","Redirect","Login","state","username","password","props","handleChange","name","val","setState","toRegister","history","replace","render","user","msg","redirectTo"],"mappings":";;;;;;;;;;;;;AAAA;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CAA6C;;AAU7C,MAAMC,KAAN,SAAoBL,SAApB,CAA6B;AAAA;AAAA;AAAA,SAC5BM,KAD4B,GACpB;AACPC,MAAAA,QAAQ,EAAE,EADH;AACO;AACdC,MAAAA,QAAQ,EAAE,EAFH,CAEO;;AAFP,KADoB;;AAAA,SAK5BL,KAL4B,GAKpB,MAAI;AACX,WAAKM,KAAL,CAAWN,KAAX,CAAiB,KAAKG,KAAtB;AACA,KAP2B;;AAAA,SAW5BI,YAX4B,GAWb,CAACC,IAAD,EAAMC,GAAN,KAAY;AAC1B,WAAKC,QAAL,CAAc;AACb,SAACF,IAAD,GAASC,GADI,CACA;;AADA,OAAd;AAGA,KAf2B;;AAAA,SAiB5BE,UAjB4B,GAiBf,MAAI;AAChB,WAAKL,KAAL,CAAWM,OAAX,CAAmBC,OAAnB,CAA2B,WAA3B;AACA,KAnB2B;AAAA;;AAqB5BC,EAAAA,MAAM,GAAE;AAAA,6BACwB,KAAKR,KAAL,CAAWS,IADnC;AAAA,UACIC,GADJ,oBACIA,GADJ;AAAA,UACSC,UADT,oBACSA,UADT;;AAEJ,QAAIA,UAAJ,EAAgB;AACf,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAEA,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACH,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADM,EAEN,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFM,EAGJD,GAAG,GAAG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,GAA5B,CAAH,GAA4C,IAH3C,EAIN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAW,MAAA,WAAW,EAAC,sCAAvB;AAAgC,MAAA,QAAQ,EAAGP,GAAG,IAAG;AAAC,aAAKF,YAAL,CAAkB,UAAlB,EAA8BE,GAA9B;AAAmC,OAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADD,EAEC;AAAW,MAAA,WAAW,EAAC,gCAAvB;AAA+B,MAAA,IAAI,EAAC,UAApC;AAA+C,MAAA,QAAQ,EAAGA,GAAG,IAAG;AAAC,aAAKF,YAAL,CAAkB,UAAlB,EAA8BE,GAA9B;AAAmC,OAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,EAIC;AAAQ,MAAA,OAAO,EAAE,KAAKT,KAAtB;AAA6B,MAAA,IAAI,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJD,EAKC;AAAQ,MAAA,OAAO,EAAE,KAAKW,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCALD,CAFD,CAJM,CAAP;AAeA;;AAzC2B;;AA4C7B,eAAeZ,OAAO,EAAE;AACtBI,KAAK,KAAK;AAACY,EAAAA,IAAI,EAAEZ,KAAK,CAACY;AAAb,CAAL,CADe,EACW;AAC/B;AAACf,EAAAA,KAAD,CAAQ;;AAAR,CAFoB,CAAP,CAGXE,KAHW,CAAf","sourcesContent":["// 登陆路由组件\n\nimport React,{ Component } from \"react\";\nimport Logo from \"../../components/logo/logo\"\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/actions\";\nimport { Redirect } from \"react-router-dom\"; //渲染Redirect标签可实现自动重定向\nimport { \n\tNavBar, \n\tWingBlank, \n\tWhiteSpace,\n\tList, \n\tInputItem,\n\tButton } from \"antd-mobile\";\n\n\nclass Login extends Component{\n\tstate = {\n\t\tusername: \"\", //用户名\n\t\tpassword: \"\", //密码\n\t}\n\tlogin = ()=>{\n\t\tthis.props.login(this.state);\n\t}\n\n\n\t//处理输入数据的改变，更新对应的状态\n\thandleChange = (name,val)=>{\n\t\tthis.setState({\n\t\t\t[name] : val //属性名不是name，而是name的值。用中括号装起来，它就是一个变量，否则是一个字符串。\n\t\t})\n\t}\n\n\ttoRegister = ()=>{\n\t\tthis.props.history.replace('/register');\n\t}\n\t\n\trender(){\n     const { msg, redirectTo } = this.props.user;\n     if (redirectTo) {\n      return <Redirect to={redirectTo}></Redirect>\n    }\n\t\treturn <div>\n\t\t\t<NavBar>夏&nbsp;末</NavBar>\n\t\t\t<Logo />\n\t\t\t {msg ? <div className=\"error-msg\">{msg}</div> : null}\n\t\t\t<WingBlank>\n\t\t\t<WhiteSpace/>\n\t\t\t\t<List>\n\t\t\t\t\t<InputItem placeholder=\"请输入用户名\" onChange={ val =>{this.handleChange(\"username\", val)} }>用户名：</InputItem>\n\t\t\t\t\t<InputItem placeholder=\"请输入密码\" type=\"password\" onChange={ val =>{this.handleChange(\"password\", val)} }>密&nbsp;&nbsp;&nbsp;码：</InputItem>\n\t\t\t\t\t<WhiteSpace/>\n\t\t\t\t\t<Button onClick={this.login} type=\"primary\" >登陆</Button>\n\t\t\t\t\t<Button onClick={this.toRegister}>还没有账户</Button>\n\t\t\t\t</List>\n\t\t\t</WingBlank>\n\t\t</div>\n\t}\n}\n\nexport default connect( //包装容器组件，传入注册函数register\n  state => ({user: state.user}), //{}里指定要传的数据。组件读取状态值，当注册成功时成功跳转；失败时在注册列表上方出现提示信息。\n  {login} //向UI组件Register传递了一个register函数\n  )(Login);"]},"metadata":{},"sourceType":"module"}