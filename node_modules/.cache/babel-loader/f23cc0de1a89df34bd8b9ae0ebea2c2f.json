{"ast":null,"code":"import \"antd-mobile/es/list/style\";\nimport _List from \"antd-mobile/es/list\";\nimport \"antd-mobile/es/grid/style\";\nimport _Grid from \"antd-mobile/es/grid\";\nvar _jsxFileName = \"/Users/luofei/recruit_react_app/recruit_react_app/src/components/header-selector/header-selector.jsx\";\n//选择用户头像的UI组件\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass HeaderSelector extends Component {\n  constructor(props) {\n    super(props); //准备需要显示的头像列表数据\n\n    this.state = {\n      icon: null //放置图片对象，默认没有值\n\n    };\n\n    this.handleClick = ({\n      text,\n      icon\n    }) => {\n      //更新当前组件状态\n      //调用函数更新父组件状态\n      this.setState({\n        icon\n      }); //为什么写成表达式的形式？\n\n      this.props.setHeader(text);\n    };\n\n    this.headerList = [];\n\n    for (let i = 0; i < 20; i++) {\n      this.headerList.push({\n        text: \"头像\" + (i + 1),\n        icon: require(\"../../assets/images/\\u5934\\u50CF\".concat(i + 1, \".png\")) //不能使用import；此处地址使用模版字符串，用require动态加载头像对应的地址\n\n      });\n    }\n  }\n\n  render() {\n    //头部界面\n    const icon = this.state.icon;\n    const listHeader = !icon ? \"请选择头像\" : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"\\u5DF2\\u9009\\u62E9\\u5934\\u50CF\\uFF1A \", React.createElement(\"img\", {\n      src: icon,\n      alt: \"\\u5934\\u50CF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n    return React.createElement(_List, {\n      renderHeader: () => listHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(_Grid, {\n      data: this.headerList,\n      columnNum: 5,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nHeaderSelector.propTypes = {\n  setHeader: PropTypes.func.isRequired\n};\nexport default HeaderSelector;","map":{"version":3,"sources":["/Users/luofei/recruit_react_app/recruit_react_app/src/components/header-selector/header-selector.jsx"],"names":["React","Component","PropTypes","HeaderSelector","constructor","props","state","icon","handleClick","text","setState","setHeader","headerList","i","push","require","render","listHeader","propTypes","func","isRequired"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,MAAMC,cAAN,SAA6BF,SAA7B,CAAsC;AACrCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN,EADiB,CAEjB;;AAFiB,SAgBlBC,KAhBkB,GAgBV;AACPC,MAAAA,IAAI,EAAE,IADC,CACI;;AADJ,KAhBU;;AAAA,SAoBlBC,WApBkB,GAoBJ,CAAC;AAACC,MAAAA,IAAD;AAAMF,MAAAA;AAAN,KAAD,KAAe;AAC5B;AACA;AACA,WAAKG,QAAL,CAAc;AAACH,QAAAA;AAAD,OAAd,EAH4B,CAGL;;AACvB,WAAKF,KAAL,CAAWM,SAAX,CAAqBF,IAArB;AACA,KAzBiB;;AAGjB,SAAKG,UAAL,GAAkB,EAAlB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC5B,WAAKD,UAAL,CAAgBE,IAAhB,CAAqB;AACpBL,QAAAA,IAAI,EAAE,QAAQI,CAAC,GAAC,CAAV,CADc;AAEpBN,QAAAA,IAAI,EAAEQ,OAAO,2CAA0BF,CAAC,GAAC,CAA5B,UAFO,CAE8B;;AAF9B,OAArB;AAIA;AACD;;AAiBDG,EAAAA,MAAM,GAAE;AACP;AADO,UAECT,IAFD,GAEU,KAAKD,KAFf,CAECC,IAFD;AAGP,UAAMU,UAAU,GAAG,CAACV,IAAD,GAAQ,OAAR,GAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAY;AAAK,MAAA,GAAG,EAAEA,IAAV;AAAgB,MAAA,GAAG,EAAC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ,CAAtC;AACA,WAAQ;AAAM,MAAA,YAAY,EAAE,MAAKU,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL;AAAM,MAAA,IAAI,EAAE,KAAKL,UAAjB;AAA6B,MAAA,SAAS,EAAE,CAAxC;AAA2C,MAAA,OAAO,EAAE,KAAKJ,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,CAAR;AAGA;;AAnCoC;;AAAhCL,c,CAaEe,S,GAAY;AAClBP,EAAAA,SAAS,EAAET,SAAS,CAACiB,IAAV,CAAeC;AADR,C;AAyBpB,eAAejB,cAAf","sourcesContent":["//选择用户头像的UI组件\nimport React,{ Component } from \"react\";\nimport { List, Grid } from \"antd-mobile\";\nimport PropTypes from \"prop-types\";\n\n\nclass HeaderSelector extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\t//准备需要显示的头像列表数据\n\t\tthis.headerList = [];\n\t\tfor (let i = 0; i < 20; i++) {\n\t\t\tthis.headerList.push({\n\t\t\t\ttext: \"头像\" + (i+1),\n\t\t\t\ticon: require(`../../assets/images/头像${i+1}.png`) //不能使用import；此处地址使用模版字符串，用require动态加载头像对应的地址\n\t\t\t})\n\t\t}\n\t}\n\n\tstatic propTypes = {\n\t\tsetHeader: PropTypes.func.isRequired\n\t}\n\n\tstate = {\n\t\ticon: null //放置图片对象，默认没有值\n\t}\n\n\thandleClick = ({text,icon})=>{\n\t\t//更新当前组件状态\n\t\t//调用函数更新父组件状态\n\t\tthis.setState({icon}); //为什么写成表达式的形式？\n\t\tthis.props.setHeader(text)\n\t}\n\n\trender(){\n\t\t//头部界面\n\t\tconst { icon } = this.state;\n\t\tconst listHeader = !icon ? \"请选择头像\" : (<div>已选择头像： <img src={icon} alt=\"头像\"/></div>);\n\t\treturn (<List renderHeader={()=> listHeader}>\n\t\t\t\t\t<Grid data={this.headerList} columnNum={5} onClick={this.handleClick}></Grid>\n\t\t\t\t</List>)\n\t}\n}\n\nexport default HeaderSelector;"]},"metadata":{},"sourceType":"module"}